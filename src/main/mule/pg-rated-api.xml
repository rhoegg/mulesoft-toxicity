<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd ">
    <apikit:config name="pg-rated-api-config" api="resource::789e5399-d140-406c-85d3-79d63c41f55b:pg-rated-api:1.0.0:raml:zip:pg-rated-api.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
    <flow name="pg-rated-api-main">
        <http:listener path="/api/*" doc:name="/api/*" config-ref="HTTP_Listener_config">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="pg-rated-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="pg-rated-api-console">
        <http:listener path="/console/*" doc:name="/console/*" config-ref="HTTP_Listener_config">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="pg-rated-api-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform doc:name="Transform Message">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="post:\comments:application\json:pg-rated-api-config">
		<scatter-gather doc:name="Scatter-Gather" doc:id="1d26c667-b27d-4999-a22f-9b340074649c" >
			<route >
				<logger level="INFO" doc:name="Logger" doc:id="550cad05-328f-4e89-bd3c-6c0432e2c8a4" />
				<flow-ref doc:name="IBM Watson NLU" doc:id="1f6d84a3-e314-471c-b019-0c61814730e8" name="ibm-watson-nluFlow"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Logger" doc:id="720185ac-04d8-4e3d-8994-1772b75e19e5" />
				<flow-ref doc:name="OpenAI" doc:id="1bbb42a1-2866-409b-a1ea-69011373f43f" name="openaiFlow"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Logger" doc:id="d3d7b3d3-50de-488a-a58d-3a98b731631c" />
				<flow-ref doc:name="Google NL Moderation" doc:id="c14ddbba-5937-4545-82a2-bfd9554344da" name="moderateGoogle"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Logger" doc:id="bedc29ec-b4b1-4681-acee-86600ec3883e" />
				<flow-ref doc:name="Cohere" doc:id="1aed594c-573a-40ae-bbe1-ef099d78adbc" name="cohereFlow"/>
			</route>
			<route >
				<logger level="INFO" doc:name="Logger" doc:id="26a7382f-36de-4f61-ac89-b3819e2383b6" />
				<flow-ref doc:name="AWS Comprehend" doc:id="779c33f3-4ec0-4961-af48-18f891704d9a" name="awscomprehendFlow"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="46170b71-729e-4833-a008-87342100260d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var ibmResult = payload[0].payload
var openaiResult = payload[1].payload
var googleResult = payload[2].payload
var cohereResult = payload[3].payload
var awsResult = read(payload[4].payload, "application/json")

fun readJson(responseBody) =
	read(responseBody, "application/json")
---
{
	ibm: ibmResult,
	openai: openaiResult,
	google: googleResult,
	cohere: cohereResult,
	aws: awsResult
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
</mule>
